{% extends app.request.attributes.get('_route') == 'date-chronology-partial'
    ? '@TeiEdition/Default/partial.html.twig'
    : '@TeiEdition/Default/base.html.twig'
%}
{% import '@TeiEdition/Shared/helper.html.twig' as helper %}

{% set embedded = app.request.attributes.get('_route') == 'date-chronology-partial' %}

{% block head %}
    <script src="{{ app.request.basepath }}/vendor/waypoints/jquery.waypoints.min.js"></script>
    <script src="{{ app.request.basepath }}/vendor/waypoints/shortcuts/sticky.min.js"></script>
    <script>
        $(document).ready(function() {
            var sticky = new Waypoint.Sticky({
                element: $('#epoch-navigation')[0],
                handler: function(direction) {
                    resizeStuck();
                }
            });

            function resizeStuck() {
                $('.stuck').width($('#epoch-navigation').parent().width() - 32);
            }

            $(window).on('resize', resizeStuck);

            {% if not embedded %}
            // activate sidebar menu based on scroll
            // see https://stackoverflow.com/a/9980042

            // Cache selectors
            var lastId,
                menu = $('#epoch-navigation'),
                menuHeight = 5,
                // All list items
                menuItems = menu.find('h5 > a[href^="#"]'),
                // Anchors corresponding to menu items
                scrollItems = menuItems.map(function() {
                    var item = $($(this).attr('href'));
                    if (item.length) { return item; }
                });

            $(window).scroll(function(){
                // Get container scroll position
                var fromTop = $(this).scrollTop();

                // Get id of current scroll item
                var cur = scrollItems.map(function(){
                  if ($(this).offset().top-menuHeight+1 < fromTop)
                    return this;
                });
                // Get the id of the current element
                cur = cur[cur.length-1];
                var id = cur && cur.length ? cur[0].id : "";

                //code
                if (lastId !== id) {
                    lastId = id;
                    // Set/remove active class
                    var items = menuItems
                        .parent()
                        .removeClass("active");

                    if (id != "") {
                        items
                            .end()
                            .filter("[href='#"+id+"']")
                            .parent()
                            .addClass("active");
                    }
                }
            });
            {% endif %}
        });
    </script>
    <style>
        .stuck {
            position: fixed;
            margin-left: 0px;
            padding-left: 15px;
            top: 0;
        }
    </style>
{% endblock %}

{% block contenttop %}
    <div class="jumbotron pt-5 pb-3">
        <div class="container">
            <div class="row">
                <div class="col offset-md-2 col-md-9">
                    <h4><a href="{{ path('place-map') }}">{{ 'Sources by primary Place'|trans }}</a> | <a href="{{ path('place-map-mentioned') }}">{{ 'All Places mentioned'|trans }}</a></h4>
                    <h2>{{ pageTitle }}</h2>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block body %}
    {{ helper.source_timeline(articles, embedded) }}
{% endblock %}
